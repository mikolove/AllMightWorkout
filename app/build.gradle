import dependencies.AnnotationProcessing
import dependencies.SupportDependencies
import dependencies.TestDependencies
import dependencies.Application
import dependencies.Dependencies
import dependencies.AndroidTestDependencies

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}


android {

    compileSdk 34

    defaultConfig {
        applicationId Application.id
        minSdk 24
        targetSdk 33

        versionCode Application.version_code
        versionName Application.version_name

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        languageVersion = JavaVersion.VERSION_1_9.toString()
    }

    sourceSets {
        test.resources.srcDirs += 'src/test/res'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    packagingOptions {
        exclude("META-INF/LICENSE.md")
        exclude("META-INF/LICENSE-notice.md")
    }

    //Replaces Kotlin synthetics
    buildFeatures {
        viewBinding true
        compose true
    }
    namespace 'com.mikolove.allmightworkout'

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.8"
    }

    /*buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }*/


}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    //Kotlin
    //implementation Dependencies.kotlin_standard_library
    //implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx

    //firebase retrofit
    implementation platform(Dependencies.firebase_bom)
    implementation Dependencies.firebase_analytics_bom
    implementation Dependencies.firebase_crashlytics_bom
    implementation Dependencies.firebase_firestore_bom
    implementation Dependencies.firebase_auth_bom
    //implementation "com.google.firebase:firebase-auth-ktx:21.1.0"
    implementation Dependencies.firebase_auth_ui

    //Android S fix auth immutable / mutable flag
    implementation "com.google.android.gms:play-services-auth:20.4.0"
    implementation "androidx.work:work-runtime-ktx:2.7.1"


    implementation Dependencies.retrofit
    implementation Dependencies.retrofit_gson
    //Coroutines
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.kotlin_coroutines_android
    implementation Dependencies.kotlin_coroutines_play_services

    //Support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

    //Lifecycle -- seem outdated now
    implementation Dependencies.lifecycle_runtime
    implementation Dependencies.lifecycle_viewmodel
    implementation Dependencies.lifecycle_livedata

    //Navigation component
    implementation Dependencies.navigation_fragment
    implementation Dependencies.navigation_ui
    implementation Dependencies.navigation_dynamic

    //Recycler View
    implementation Dependencies.recycler_view

    //Fragment
    implementation Dependencies.fragment_ktx

    //Room
    implementation Dependencies.room_runtime
    implementation Dependencies.room_ktx
    kapt AnnotationProcessing.room_compiler

    //Material dialog
    implementation Dependencies.material_dialogs
    implementation Dependencies.material_dialogs_input

    //Di
    //Versions are different for hilt and jetpack tools
    implementation Dependencies.hilt
    kapt AnnotationProcessing.hilt_compiler

    implementation Dependencies.hilt_jetpack_navigation
    implementation Dependencies.hilt_jetpack_compose
    implementation Dependencies.hilt_workmanager

    //Multidex
    implementation Dependencies.multidex


    //Data Store
    implementation Dependencies.datastore

    // JUNIT Test
    //testImplementation TestDependencies.mockk
    testImplementation TestDependencies.jupiter_api
    testRuntimeOnly TestDependencies.jupiter_engine
    testImplementation TestDependencies.jupiter_params
    testImplementation TestDependencies.junit4


    //ANDROID TEST
    androidTestImplementation AndroidTestDependencies.test_core_ktx
    androidTestImplementation AndroidTestDependencies.test_ext
    androidTestImplementation AndroidTestDependencies.test_ext_truth
    androidTestImplementation AndroidTestDependencies.junit_ktx
    androidTestImplementation AndroidTestDependencies.test_runner
    androidTestImplementation AndroidTestDependencies.test_orchestrator
    androidTestImplementation AndroidTestDependencies.test_rules
    debugImplementation AndroidTestDependencies.monitor


    /*
    Fix error
    More than one file was found with OS independent path 'META-INF/AL2.0'.
    https://github.com/Kotlin/kotlinx.coroutines/issues/2023
     */
    androidTestImplementation(AndroidTestDependencies.coroutines_test){
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    androidTestImplementation AndroidTestDependencies.kotlin_test
    androidTestImplementation AndroidTestDependencies.espresso_core
    androidTestImplementation AndroidTestDependencies.mockk_android
    androidTestImplementation AndroidTestDependencies.navigation_testing

    //debugImplementation AndroidTestDependencies.fragment_testing
    //androidTestImplementation AndroidTestDependencies.espresso_contrib
    //androidTestImplementation AndroidTestDependencies.idling_resource


    // Hilt for instrumentation tests
    androidTestImplementation AndroidTestDependencies.hilt_testing
    kaptAndroidTest AnnotationProcessing.hilt_compiler

    // Hilt for local unit test
    testImplementation AndroidTestDependencies.hilt_testing
    kaptTest AnnotationProcessing.hilt_compiler


    //Test core ktx and fragment scenario
    //debugImplementation AndroidTestDependencies.fragment_testing
    //androidTestImplementation AndroidTestDependencies.text_core_ktx


    //Jetpack compose
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation Dependencies.compose_material3

    implementation Dependencies.compose_uitooling_preview
    debugImplementation Dependencies.compose_uitooling



    debugImplementation Dependencies.leak_canary
}

kapt {
    correctErrorTypes true
}

/*
repositories {
    mavenCentral()
}*/
