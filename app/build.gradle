import dependencies.AnnotationProcessing
import dependencies.SupportDependencies
import dependencies.TestDependencies
import dependencies.Versions
import dependencies.Application
import dependencies.Dependencies
import dependencies.Java
import dependencies.AndroidTestDependencies

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin : 'kotlin-parcelize'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'


android {

    compileSdkVersion  Versions.compilesdk

    defaultConfig {
        applicationId Application.id
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk

        versionCode Application.version_code
        versionName Application.version_name

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }

    compileOptions {
        sourceCompatibility = Java.java_version
        targetCompatibility = Java.java_version
    }

    kotlinOptions {
        jvmTarget = Java.java_version
    }

    sourceSets {
        test.resources.srcDirs += 'src/test/res'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    //Replaces Kotlin synthetics
    buildFeatures {
        viewBinding true
    }

    /*buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }*/
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    //Kotlin
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx

    //firebase retrofit
    implementation platform(Dependencies.firebase_bom)
    implementation Dependencies.firebase_analytics_bom
    implementation Dependencies.firebase_crashlytics_bom
    implementation Dependencies.firebase_firestore_bom
    implementation Dependencies.firebase_auth_bom
    implementation Dependencies.retrofit
    implementation Dependencies.retrofit_gson

    //Coroutines
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.kotlin_coroutines_android
    implementation Dependencies.kotlin_coroutines_play_services

    //Support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

    //Lifecycle
    implementation Dependencies.lifecycle_runtime
    implementation Dependencies.lifecycle_viewmodel
    implementation Dependencies.lifecycle_livedata

    //Navigation component
    implementation Dependencies.navigation_fragment
    implementation Dependencies.navigation_ui
    implementation Dependencies.navigation_dynamic

    //Fragment
    implementation Dependencies.fragment_ktx

    //Room
    implementation Dependencies.room_runtime
    implementation Dependencies.room_ktx
    kapt AnnotationProcessing.room_compiler

    //Material dialog
    implementation Dependencies.material_dialogs
    implementation Dependencies.material_dialogs_input

    //Di
    //Versions are different for hilt and jetpack tools
    implementation Dependencies.hilt
    kapt AnnotationProcessing.hilt_compiler

    implementation Dependencies.hilt_jetpack_navigation
    implementation Dependencies.hilt_workmanager

    //Multidex
    implementation Dependencies.multidex

    // Test
    testImplementation TestDependencies.mockk
    testImplementation TestDependencies.jupiter_api
    testImplementation TestDependencies.jupiter_params
    testImplementation TestDependencies.junit4
    testRuntimeOnly TestDependencies.jupiter_engine


    /*
    Fix error
    More than one file was found with OS independent path 'META-INF/AL2.0'.
    https://github.com/Kotlin/kotlinx.coroutines/issues/2023
     */
    androidTestImplementation(AndroidTestDependencies.coroutines_test){
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    androidTestImplementation AndroidTestDependencies.kotlin_test
    androidTestImplementation AndroidTestDependencies.espresso_core
    androidTestImplementation AndroidTestDependencies.espresso_contrib
    androidTestImplementation AndroidTestDependencies.idling_resource
    androidTestImplementation AndroidTestDependencies.mockk_android
    androidTestImplementation AndroidTestDependencies.test_runner
    androidTestImplementation AndroidTestDependencies.test_rules
    androidTestImplementation AndroidTestDependencies.text_core_ktx
    androidTestImplementation AndroidTestDependencies.navigation_testing
    debugImplementation AndroidTestDependencies.fragment_testing


    // Hilt for instrumentation tests
    androidTestImplementation AndroidTestDependencies.hilt_testing
    kaptAndroidTest AnnotationProcessing.hilt_compiler

    // Hilt for local unit test
    testImplementation AndroidTestDependencies.hilt_testing
    kaptTest AnnotationProcessing.hilt_compiler

    //Test core ktx and fragment scenario
    //debugImplementation AndroidTestDependencies.fragment_testing
    //androidTestImplementation AndroidTestDependencies.text_core_ktx

    debugImplementation Dependencies.leak_canary
}

kapt {
    correctErrorTypes true
}

repositories {
    mavenCentral()
}